// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package db

import (
	"context"
)

const addUser = `-- name: AddUser :one
INSERT INTO user (
    name,
    username,
    password
) VALUES (?, ?, ?) RETURNING id, name, username, password
`

type AddUserParams struct {
	Name     string `json:"name"`
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) AddUser(ctx context.Context, arg AddUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, addUser, arg.Name, arg.Username, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Username,
		&i.Password,
	)
	return i, err
}

const getPasswordByUsername = `-- name: GetPasswordByUsername :one
SELECT password FROM user WHERE username = ?
`

func (q *Queries) GetPasswordByUsername(ctx context.Context, username string) (string, error) {
	row := q.db.QueryRowContext(ctx, getPasswordByUsername, username)
	var password string
	err := row.Scan(&password)
	return password, err
}
